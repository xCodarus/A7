In file included from ../ext/bson.cc:35:
In file included from ../ext/bson.h:17:
../ext/nan.h:185:9: error: no template named 'Handle' in namespace 'v8'
  , v8::Handle<v8::String> opt, bool def
    ~~~~^
../ext/nan.h:141:71: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                                      ^~~~~~~~~~
../ext/nan.h:200:9: error: no template named 'Handle' in namespace 'v8'
  , v8::Handle<v8::String> opt
    ~~~~^
../ext/nan.h:141:71: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                                      ^~~~~~~~~~
../ext/nan.h:207:9: error: no template named 'Handle' in namespace 'v8'
  , v8::Handle<v8::String> opt
    ~~~~^
../ext/nan.h:141:71: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                                      ^~~~~~~~~~
../ext/nan.h:327:28: warning: inline variables are a C++17 extension [-Wc++17-extensions]
  template<class T> static NAN_INLINE(v8::Local<T> NanNewLocal(
                           ^
../ext/nan.h:141:33: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                ^
../ext/nan.h:327:28: warning: 'always_inline' attribute only applies to functions [-Wignored-attributes]
../ext/nan.h:141:55: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                      ^
../ext/nan.h:328:11: error: no member named 'Handle' in namespace 'v8'
      v8::Handle<T> val
      ~~~~^
../ext/nan.h:141:71: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                                      ^~~~~~~~~~
../ext/nan.h:328:18: error: 'T' does not refer to a value
      v8::Handle<T> val
                 ^
../ext/nan.h:327:18: note: declared here
  template<class T> static NAN_INLINE(v8::Local<T> NanNewLocal(
                 ^
../ext/nan.h:328:21: error: use of undeclared identifier 'val'
      v8::Handle<T> val
                    ^
../ext/nan.h:329:5: error: expected ';' at end of declaration
  )) {
    ^
    ;
../ext/nan.h:329:6: error: expected unqualified-id
  )) {
     ^
../ext/nan.h:338:25: error: no template named 'Handle' in namespace 'v8'
  static NAN_INLINE(v8::Handle<v8::Value> NanError(const char* errmsg)) {
                    ~~~~^
../ext/nan.h:141:71: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                                      ^~~~~~~~~~
../ext/nan.h:339:13: error: no member named 'New' in 'v8::String'
    return  _NAN_ERROR(v8::Exception::Error, errmsg);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ext/nan.h:319:50: note: expanded from macro '_NAN_ERROR'
# define _NAN_ERROR(fun, errmsg) fun(v8::String::New(errmsg))
                                     ~~~~~~~~~~~~^
../ext/nan.h:343:5: error: no member named 'ThrowException' in namespace 'v8'
    _NAN_THROW_ERROR(v8::Exception::Error, errmsg);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ext/nan.h:324:11: note: expanded from macro '_NAN_THROW_ERROR'
      v8::ThrowException(_NAN_ERROR(fun, errmsg));                             \
      ~~~~^
../ext/nan.h:343:5: error: no member named 'New' in 'v8::String'
    _NAN_THROW_ERROR(v8::Exception::Error, errmsg);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ext/nan.h:324:26: note: expanded from macro '_NAN_THROW_ERROR'
      v8::ThrowException(_NAN_ERROR(fun, errmsg));                             \
                         ^~~~~~~~~~~~~~~~~~~~~~~
../ext/nan.h:319:50: note: expanded from macro '_NAN_ERROR'
# define _NAN_ERROR(fun, errmsg) fun(v8::String::New(errmsg))
                                     ~~~~~~~~~~~~^
../ext/nan.h:346:10: warning: inline variables are a C++17 extension [-Wc++17-extensions]
  static NAN_INLINE(void NanThrowError(v8::Handle<v8::Value> error)) {
         ^
../ext/nan.h:141:33: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                ^
../ext/nan.h:346:10: warning: 'always_inline' attribute only applies to functions [-Wignored-attributes]
../ext/nan.h:141:55: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                      ^
../ext/nan.h:346:26: error: variable has incomplete type 'void'
  static NAN_INLINE(void NanThrowError(v8::Handle<v8::Value> error)) {
                         ^
../ext/nan.h:346:44: error: no member named 'Handle' in namespace 'v8'
  static NAN_INLINE(void NanThrowError(v8::Handle<v8::Value> error)) {
                                       ~~~~^
../ext/nan.h:141:71: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                                      ^~~~~~~~~~
../ext/nan.h:346:60: error: expected '(' for function-style cast or type construction
  static NAN_INLINE(void NanThrowError(v8::Handle<v8::Value> error)) {
                                                  ~~~~~~~~~^
../ext/nan.h:141:71: note: expanded from macro 'NAN_INLINE'
# define NAN_INLINE(declarator) inline __attribute__((always_inline)) declarator
                                                                      ^~~~~~~~~~
../ext/nan.h:346:62: error: use of undeclared identifier 'error'
  static NAN_INLINE(void NanThrowError(v8::Handle<v8::Value> error)) {
                                                             ^
../ext/nan.h:346:69: error: expected ';' after top level declarator
  static NAN_INLINE(void NanThrowError(v8::Handle<v8::Value> error)) {
                                                                    ^
                                                                    ;
../ext/nan.h:777:19: error: unknown type name 'NanCallback'
  NanAsyncWorker (NanCallback *callback) : callback(callback) {
                  ^
../ext/nan.h:824:3: error: unknown type name 'NanCallback'
  NanCallback *callback;
  ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
4 warnings and 20 errors generated.
make: *** [Release/obj.target/bson/ext/bson.o] Error 1
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:194:23)
gyp ERR! stack     at ChildProcess.emit (events.js:223:5)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:272:12)
gyp ERR! System Darwin 19.2.0
gyp ERR! command "/usr/local/bin/node" "/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js" "rebuild"
gyp ERR! cwd /Users/davidchiu/Documents/introHCI/A7/node_modules/bson
gyp ERR! node -v v12.14.1
gyp ERR! node-gyp -v v5.0.5
gyp ERR! not ok 
